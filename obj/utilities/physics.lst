                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.5.4 #9329 (Linux)
                              4 ; This file was generated Wed Oct  7 20:33:57 2015
                              5 ;--------------------------------------------------------
                              6 	.module physics
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _resetIndex
                             13 	.globl _insertInCollisionArray
                             14 	.globl _topRightIndex
                             15 	.globl _botRighttIndex
                             16 	.globl _topLeftIndex
                             17 	.globl _botLeftIndex
                             18 	.globl _TRstaticColliders
                             19 	.globl _TLstaticColliders
                             20 	.globl _BRstaticColliders
                             21 	.globl _BLstaticColliders
                             22 	.globl _addStaticCollider
                             23 ;--------------------------------------------------------
                             24 ; special function registers
                             25 ;--------------------------------------------------------
                             26 ;--------------------------------------------------------
                             27 ; ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DATA
   0000                      30 _BLstaticColliders::
   0000                      31 	.ds 10
   000A                      32 _BRstaticColliders::
   000A                      33 	.ds 10
   0014                      34 _TLstaticColliders::
   0014                      35 	.ds 10
   001E                      36 _TRstaticColliders::
   001E                      37 	.ds 10
                             38 ;--------------------------------------------------------
                             39 ; ram data
                             40 ;--------------------------------------------------------
                             41 	.area _INITIALIZED
   0000                      42 _botLeftIndex::
   0000                      43 	.ds 1
   0001                      44 _topLeftIndex::
   0001                      45 	.ds 1
   0002                      46 _botRighttIndex::
   0002                      47 	.ds 1
   0003                      48 _topRightIndex::
   0003                      49 	.ds 1
                             50 ;--------------------------------------------------------
                             51 ; absolute external ram data
                             52 ;--------------------------------------------------------
                             53 	.area _DABS (ABS)
                             54 ;--------------------------------------------------------
                             55 ; global & static initialisations
                             56 ;--------------------------------------------------------
                             57 	.area _HOME
                             58 	.area _GSINIT
                             59 	.area _GSFINAL
                             60 	.area _GSINIT
                             61 ;--------------------------------------------------------
                             62 ; Home
                             63 ;--------------------------------------------------------
                             64 	.area _HOME
                             65 	.area _HOME
                             66 ;--------------------------------------------------------
                             67 ; code
                             68 ;--------------------------------------------------------
                             69 	.area _CODE
                             70 ;src/utilities/physics.c:24: void insertInCollisionArray(TCollider *col, u8 pointX, u8 pointY)
                             71 ;	---------------------------------
                             72 ; Function insertInCollisionArray
                             73 ; ---------------------------------
   0000                      74 _insertInCollisionArray::
   0000 DD E5         [15]   75 	push	ix
   0002 DD 21 00 00   [14]   76 	ld	ix,#0
   0006 DD 39         [15]   77 	add	ix,sp
                             78 ;src/utilities/physics.c:28: if(pointX < MID_VSCREEN)
   0008 DD 7E 06      [19]   79 	ld	a,6 (ix)
   000B D6 28         [ 7]   80 	sub	a, #0x28
   000D 3E 00         [ 7]   81 	ld	a,#0x00
   000F 17            [ 4]   82 	rla
   0010 4F            [ 4]   83 	ld	c,a
                             84 ;src/utilities/physics.c:26: if(pointY < MID_HSCREEN)
   0011 DD 7E 07      [19]   85 	ld	a,7 (ix)
   0014 D6 64         [ 7]   86 	sub	a, #0x64
   0016 30 3E         [12]   87 	jr	NC,00108$
                             88 ;src/utilities/physics.c:28: if(pointX < MID_VSCREEN)
   0018 79            [ 4]   89 	ld	a,c
   0019 B7            [ 4]   90 	or	a, a
   001A 28 1D         [12]   91 	jr	Z,00102$
                             92 ;src/utilities/physics.c:30: BLstaticColliders[botLeftIndex] = col;	
   001C FD 21r00r00   [14]   93 	ld	iy,#_botLeftIndex
   0020 FD 6E 00      [19]   94 	ld	l,0 (iy)
   0023 26 00         [ 7]   95 	ld	h,#0x00
   0025 29            [11]   96 	add	hl, hl
   0026 11r00r00      [10]   97 	ld	de,#_BLstaticColliders
   0029 19            [11]   98 	add	hl,de
   002A DD 7E 04      [19]   99 	ld	a,4 (ix)
   002D 77            [ 7]  100 	ld	(hl),a
   002E 23            [ 6]  101 	inc	hl
   002F DD 7E 05      [19]  102 	ld	a,5 (ix)
   0032 77            [ 7]  103 	ld	(hl),a
                            104 ;src/utilities/physics.c:31: ++botLeftIndex;
   0033 21r00r00      [10]  105 	ld	hl, #_botLeftIndex+0
   0036 34            [11]  106 	inc	(hl)
   0037 18 59         [12]  107 	jr	00110$
   0039                     108 00102$:
                            109 ;src/utilities/physics.c:35: BRstaticColliders[botRighttIndex] = col;
   0039 FD 21r02r00   [14]  110 	ld	iy,#_botRighttIndex
   003D FD 6E 00      [19]  111 	ld	l,0 (iy)
   0040 26 00         [ 7]  112 	ld	h,#0x00
   0042 29            [11]  113 	add	hl, hl
   0043 11r0Ar00      [10]  114 	ld	de,#_BRstaticColliders
   0046 19            [11]  115 	add	hl,de
   0047 DD 7E 04      [19]  116 	ld	a,4 (ix)
   004A 77            [ 7]  117 	ld	(hl),a
   004B 23            [ 6]  118 	inc	hl
   004C DD 7E 05      [19]  119 	ld	a,5 (ix)
   004F 77            [ 7]  120 	ld	(hl),a
                            121 ;src/utilities/physics.c:36: ++botRighttIndex;
   0050 21r02r00      [10]  122 	ld	hl, #_botRighttIndex+0
   0053 34            [11]  123 	inc	(hl)
   0054 18 3C         [12]  124 	jr	00110$
   0056                     125 00108$:
                            126 ;src/utilities/physics.c:41: if(pointX < MID_VSCREEN)
   0056 79            [ 4]  127 	ld	a,c
   0057 B7            [ 4]  128 	or	a, a
   0058 28 1D         [12]  129 	jr	Z,00105$
                            130 ;src/utilities/physics.c:43: TLstaticColliders[topLeftIndex] = col;	
   005A FD 21r01r00   [14]  131 	ld	iy,#_topLeftIndex
   005E FD 6E 00      [19]  132 	ld	l,0 (iy)
   0061 26 00         [ 7]  133 	ld	h,#0x00
   0063 29            [11]  134 	add	hl, hl
   0064 11r14r00      [10]  135 	ld	de,#_TLstaticColliders
   0067 19            [11]  136 	add	hl,de
   0068 DD 7E 04      [19]  137 	ld	a,4 (ix)
   006B 77            [ 7]  138 	ld	(hl),a
   006C 23            [ 6]  139 	inc	hl
   006D DD 7E 05      [19]  140 	ld	a,5 (ix)
   0070 77            [ 7]  141 	ld	(hl),a
                            142 ;src/utilities/physics.c:44: ++topLeftIndex;
   0071 21r01r00      [10]  143 	ld	hl, #_topLeftIndex+0
   0074 34            [11]  144 	inc	(hl)
   0075 18 1B         [12]  145 	jr	00110$
   0077                     146 00105$:
                            147 ;src/utilities/physics.c:48: TRstaticColliders[topRightIndex] = col;	
   0077 FD 21r03r00   [14]  148 	ld	iy,#_topRightIndex
   007B FD 6E 00      [19]  149 	ld	l,0 (iy)
   007E 26 00         [ 7]  150 	ld	h,#0x00
   0080 29            [11]  151 	add	hl, hl
   0081 11r1Er00      [10]  152 	ld	de,#_TRstaticColliders
   0084 19            [11]  153 	add	hl,de
   0085 DD 7E 04      [19]  154 	ld	a,4 (ix)
   0088 77            [ 7]  155 	ld	(hl),a
   0089 23            [ 6]  156 	inc	hl
   008A DD 7E 05      [19]  157 	ld	a,5 (ix)
   008D 77            [ 7]  158 	ld	(hl),a
                            159 ;src/utilities/physics.c:49: ++topRightIndex;
   008E 21r03r00      [10]  160 	ld	hl, #_topRightIndex+0
   0091 34            [11]  161 	inc	(hl)
   0092                     162 00110$:
   0092 DD E1         [14]  163 	pop	ix
   0094 C9            [10]  164 	ret
                            165 ;src/utilities/physics.c:54: void addStaticCollider(TCollider *col)
                            166 ;	---------------------------------
                            167 ; Function addStaticCollider
                            168 ; ---------------------------------
   0095                     169 _addStaticCollider::
   0095 DD E5         [15]  170 	push	ix
   0097 DD 21 00 00   [14]  171 	ld	ix,#0
   009B DD 39         [15]  172 	add	ix,sp
   009D 21 FA FF      [10]  173 	ld	hl,#-6
   00A0 39            [11]  174 	add	hl,sp
   00A1 F9            [ 6]  175 	ld	sp,hl
                            176 ;src/utilities/physics.c:57: insertInCollisionArray(col, col->x, col->y);
   00A2 DD 5E 04      [19]  177 	ld	e,4 (ix)
   00A5 DD 56 05      [19]  178 	ld	d,5 (ix)
   00A8 21 01 00      [10]  179 	ld	hl,#0x0001
   00AB 19            [11]  180 	add	hl,de
   00AC E3            [19]  181 	ex	(sp), hl
   00AD E1            [10]  182 	pop	hl
   00AE E5            [11]  183 	push	hl
   00AF 46            [ 7]  184 	ld	b,(hl)
   00B0 1A            [ 7]  185 	ld	a,(de)
   00B1 D5            [11]  186 	push	de
   00B2 C5            [11]  187 	push	bc
   00B3 33            [ 6]  188 	inc	sp
   00B4 F5            [11]  189 	push	af
   00B5 33            [ 6]  190 	inc	sp
   00B6 D5            [11]  191 	push	de
   00B7 CDr00r00      [17]  192 	call	_insertInCollisionArray
   00BA F1            [10]  193 	pop	af
   00BB F1            [10]  194 	pop	af
   00BC D1            [10]  195 	pop	de
                            196 ;src/utilities/physics.c:58: insertInCollisionArray(col, col->x+col->w, col->y);
   00BD E1            [10]  197 	pop	hl
   00BE E5            [11]  198 	push	hl
   00BF 46            [ 7]  199 	ld	b,(hl)
   00C0 1A            [ 7]  200 	ld	a,(de)
   00C1 4F            [ 4]  201 	ld	c,a
   00C2 21 02 00      [10]  202 	ld	hl,#0x0002
   00C5 19            [11]  203 	add	hl,de
   00C6 DD 75 FE      [19]  204 	ld	-2 (ix),l
   00C9 DD 74 FF      [19]  205 	ld	-1 (ix),h
   00CC DD 6E FE      [19]  206 	ld	l,-2 (ix)
   00CF DD 66 FF      [19]  207 	ld	h,-1 (ix)
   00D2 66            [ 7]  208 	ld	h,(hl)
   00D3 79            [ 4]  209 	ld	a,c
   00D4 84            [ 4]  210 	add	a, h
   00D5 D5            [11]  211 	push	de
   00D6 C5            [11]  212 	push	bc
   00D7 33            [ 6]  213 	inc	sp
   00D8 F5            [11]  214 	push	af
   00D9 33            [ 6]  215 	inc	sp
   00DA D5            [11]  216 	push	de
   00DB CDr00r00      [17]  217 	call	_insertInCollisionArray
   00DE F1            [10]  218 	pop	af
   00DF F1            [10]  219 	pop	af
   00E0 D1            [10]  220 	pop	de
                            221 ;src/utilities/physics.c:59: insertInCollisionArray(col, col->x, col->y+col->h);
   00E1 E1            [10]  222 	pop	hl
   00E2 E5            [11]  223 	push	hl
   00E3 46            [ 7]  224 	ld	b,(hl)
   00E4 21 03 00      [10]  225 	ld	hl,#0x0003
   00E7 19            [11]  226 	add	hl,de
   00E8 DD 75 FC      [19]  227 	ld	-4 (ix),l
   00EB DD 74 FD      [19]  228 	ld	-3 (ix),h
   00EE DD 6E FC      [19]  229 	ld	l,-4 (ix)
   00F1 DD 66 FD      [19]  230 	ld	h,-3 (ix)
   00F4 6E            [ 7]  231 	ld	l,(hl)
   00F5 78            [ 4]  232 	ld	a,b
   00F6 85            [ 4]  233 	add	a, l
   00F7 47            [ 4]  234 	ld	b,a
   00F8 1A            [ 7]  235 	ld	a,(de)
   00F9 D5            [11]  236 	push	de
   00FA C5            [11]  237 	push	bc
   00FB 33            [ 6]  238 	inc	sp
   00FC F5            [11]  239 	push	af
   00FD 33            [ 6]  240 	inc	sp
   00FE D5            [11]  241 	push	de
   00FF CDr00r00      [17]  242 	call	_insertInCollisionArray
   0102 F1            [10]  243 	pop	af
   0103 F1            [10]  244 	pop	af
   0104 D1            [10]  245 	pop	de
                            246 ;src/utilities/physics.c:60: insertInCollisionArray(col, col->x+col->w, col->y+col->h);	
   0105 E1            [10]  247 	pop	hl
   0106 E5            [11]  248 	push	hl
   0107 46            [ 7]  249 	ld	b,(hl)
   0108 DD 6E FC      [19]  250 	ld	l,-4 (ix)
   010B DD 66 FD      [19]  251 	ld	h,-3 (ix)
   010E 66            [ 7]  252 	ld	h,(hl)
   010F 78            [ 4]  253 	ld	a,b
   0110 84            [ 4]  254 	add	a, h
   0111 47            [ 4]  255 	ld	b,a
   0112 1A            [ 7]  256 	ld	a,(de)
   0113 4F            [ 4]  257 	ld	c,a
   0114 DD 6E FE      [19]  258 	ld	l,-2 (ix)
   0117 DD 66 FF      [19]  259 	ld	h,-1 (ix)
   011A 66            [ 7]  260 	ld	h,(hl)
   011B 79            [ 4]  261 	ld	a,c
   011C 84            [ 4]  262 	add	a, h
   011D C5            [11]  263 	push	bc
   011E 33            [ 6]  264 	inc	sp
   011F F5            [11]  265 	push	af
   0120 33            [ 6]  266 	inc	sp
   0121 D5            [11]  267 	push	de
   0122 CDr00r00      [17]  268 	call	_insertInCollisionArray
   0125 DD F9         [10]  269 	ld	sp,ix
   0127 DD E1         [14]  270 	pop	ix
   0129 C9            [10]  271 	ret
                            272 ;src/utilities/physics.c:68: void resetIndex()
                            273 ;	---------------------------------
                            274 ; Function resetIndex
                            275 ; ---------------------------------
   012A                     276 _resetIndex::
                            277 ;src/utilities/physics.c:70: botLeftIndex = 0;
   012A 21r00r00      [10]  278 	ld	hl,#_botLeftIndex + 0
   012D 36 00         [10]  279 	ld	(hl), #0x00
                            280 ;src/utilities/physics.c:71: topLeftIndex = 0;
   012F 21r01r00      [10]  281 	ld	hl,#_topLeftIndex + 0
   0132 36 00         [10]  282 	ld	(hl), #0x00
                            283 ;src/utilities/physics.c:72: botRighttIndex = 0;
   0134 21r02r00      [10]  284 	ld	hl,#_botRighttIndex + 0
   0137 36 00         [10]  285 	ld	(hl), #0x00
                            286 ;src/utilities/physics.c:73: topRightIndex = 0;
   0139 21r03r00      [10]  287 	ld	hl,#_topRightIndex + 0
   013C 36 00         [10]  288 	ld	(hl), #0x00
   013E C9            [10]  289 	ret
                            290 	.area _CODE
                            291 	.area _INITIALIZER
   0000                     292 __xinit__botLeftIndex:
   0000 00                  293 	.db #0x00	; 0
   0001                     294 __xinit__topLeftIndex:
   0001 00                  295 	.db #0x00	; 0
   0002                     296 __xinit__botRighttIndex:
   0002 00                  297 	.db #0x00	; 0
   0003                     298 __xinit__topRightIndex:
   0003 00                  299 	.db #0x00	; 0
                            300 	.area _CABS (ABS)
